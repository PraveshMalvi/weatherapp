{"version":3,"sources":["Weather.js","Temp.js","App.js","index.js"],"names":["Weather","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"0OAkHeA,MAhHf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEEC,EAQEJ,EARFI,KACAC,EAOEL,EAPFK,SACAC,EAMEN,EANFM,SACAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,KACAC,EAGET,EAHFS,MACAC,EAEEV,EAFFU,QACAC,EACEX,EADFW,OAGFC,qBAAU,WACR,GAAIL,EACF,OAAQA,GACN,IAAK,SACHJ,EAAgB,aAChB,MACF,IAAK,OACHA,EAAgB,WAChB,MACF,IAAK,OACHA,EAAgB,UAChB,MACF,IAAK,QACHA,EAAgB,gBAChB,MACF,IAAK,OACHA,EAAgB,mBAChB,MACF,QACEA,EAAgB,mBAIrB,CAACI,IAGJ,IACIM,EAAO,IAAIC,KAAW,IADhBH,GAENI,EAAO,UAAMF,EAAKG,WAAX,YAAyBH,EAAKI,cAEzC,OACE,mCACE,0BAASC,UAAU,SAAnB,UACE,qBAAKA,UAAU,cAAf,SACE,mBAAGA,UAAS,aAAQhB,OAEtB,sBAAKgB,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,iCAAOd,EAAP,YAEF,sBAAKc,UAAU,cAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCX,IACnC,sBAAKW,UAAU,QAAf,UACGV,EADH,KACWE,WAIf,sBAAKQ,UAAU,OAAf,eAAwB,IAAIJ,MAAOK,iBAAnC,OACA,sBAAKD,UAAU,aAAf,UACE,sBAAKA,UAAU,mBAAf,UAEE,sBAAKA,UAAU,oBAAf,UACE,4BACE,mBAAGA,UAAW,mBAEhB,oBAAGA,UAAU,sBAAb,UACGH,EADH,OACe,uBADf,eAMF,sBAAKG,UAAU,oBAAf,UACE,4BACE,mBAAGA,UAAW,qBAEhB,oBAAGA,UAAU,sBAAb,UACGb,EADH,IACa,uBADb,oBAMJ,sBAAKa,UAAU,qBAAf,UAEE,sBAAKA,UAAU,oBAAf,UACE,4BACE,mBAAGA,UAAW,iBAEhB,oBAAGA,UAAU,sBAAb,UACGZ,EADH,IACa,uBADb,iBAMF,sBAAKY,UAAU,oBAAf,UACE,4BACE,mBAAGA,UAAW,wBAEhB,oBAAGA,UAAU,sBAAb,UACGT,EADH,IACU,uBADV,0BCnCCW,MA/Df,WAEE,MAAsCnB,mBAAS,UAA/C,mBAAOoB,EAAP,KAAoBC,EAApB,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOD,EAAP,KAAiBuB,EAAjB,KAEMC,EAAc,uCAAG,oDAAAC,EAAA,sEAEfC,EAFe,4DAE4CL,EAF5C,iEAGHM,MAAMD,GAHH,cAGfE,EAHe,gBAIFA,EAAIC,OAJF,OAIfC,EAJe,SAMkBA,EAAKC,KAAlC3B,EANW,EAMXA,KAAMC,EANK,EAMLA,SAAUC,EANL,EAMKA,SACVC,EAAgBuB,EAAKE,QAAQ,GAAnCD,KACAvB,EAASsB,EAATtB,KACAC,EAAUqB,EAAKG,KAAfxB,MATW,EAUSqB,EAAKI,IAAzBxB,EAVW,EAUXA,QAASC,EAVE,EAUFA,OAajBY,EAXuB,CACrBnB,OACAC,WACAC,WACAC,cACAC,OACAC,QACAC,UACAC,WApBiB,kDAyBnBwB,QAAQC,IAAR,MAzBmB,0DAAH,qDA+BpB,OAHAxB,qBAAU,WACRY,OAGA,qCACE,qBAAKN,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,uBACEmB,KAAK,SACLC,YAAY,YACZC,WAAS,EACTC,GAAG,SACHtB,UAAU,aACVuB,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAAeqB,EAAEC,OAAOH,UAE3C,wBACEvB,UAAU,eACVmB,KAAK,SACLQ,QAASrB,EAHX,yBASJ,cAAC,EAAD,CAASxB,SAAUA,QCpDV8C,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c485b072.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Weather({ tempInfo }) {\r\n  const [weatherState, setWeatherState] = useState(\"\");\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setWeatherState(\"wi-cloudy\");\r\n          break;\r\n        case \"Rain\":\r\n          setWeatherState(\"wi-rain\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState(\"wi-fog\");\r\n          break;\r\n        case \"Clear\":\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatherState(\"wi-cloudy-gusts\");\r\n          break;\r\n        default:\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n\r\n  //converting seconds into min and hrs\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temprature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weathermood}</div>\r\n            <div className=\"place\">\r\n              {name}, {country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            {/* one */}\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-sunset\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timeStr} PM <br />\r\n                Sunset\r\n              </p>\r\n            </div>\r\n            {/* one */}\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-humidity\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity} <br />\r\n                Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"weather-extra-info\">\r\n            {/* two */}\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-rain\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure} <br />\r\n                Pressure\r\n              </p>\r\n            </div>\r\n            {/* two */}\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-strong-wind\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed} <br />\r\n                Speed\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport Weather from \"./Weather\";\r\n\r\nfunction Temp() {\r\n  // state to get the value from search box\r\n  const [searchValue, setSearchValue] = useState(\"indore\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=2a2b098e41a850dbdf745cd52413e3b5`;\r\n      let res = await fetch(url);\r\n      let data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weathermood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n\r\n      const newWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(newWeatherInfo);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"search...\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Weather tempInfo={tempInfo} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Temp;\r\n","import Temp from \"./Temp\";\n\nfunction App() {\n  return (\n    <>\n      <Temp />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}